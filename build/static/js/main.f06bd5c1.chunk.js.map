{"version":3,"sources":["customHooks/animeReducer.js","customHooks/authReducer.js","customHooks/currentAnimeReducer.js","customHooks/searchReducer.js","supabase.js","contexts/AnimeContext.js","components/Card.jsx","components/Modal.jsx","components/CurrentCalendarCard.jsx","components/Cards.jsx","components/CurrentCalendar.jsx","components/CurrentCalendarRenderer.jsx","components/Nav.jsx","components/Search.jsx","components/SearchRenderer.jsx","components/Watchlist.jsx","App.js","index.js"],"names":["animeReducer","state","action","type","items","localStorage","getItem","JSON","parse","animes","stateCopy","name","anime","genre","url","aid","rating","episodes","date","description","banner","nextEpisode","id","setItem","stringify","newStateCopy","filter","object","authReducer","newSafeMode","safeMode","loading","password","passwordToggle","selectedState","newLoading","newPass","newPasswordToggle","payload","newSelectedState","searchReducer","require","config","supabase","createClient","process","schema","autoRefreshToken","persistSession","detectSessionInUrl","AnimeContext","createContext","AnimeContextProvider","props","useReducer","dispatch","currentAnimeReducer","currentAnimes","currentAnimeDispatch","a","user","auth","from","select","eq","email","data","error","watchlist","setWatchlist","upsert","authenticator","search","searchAnimes","Provider","value","syncWatchlist","loadWatchlist","children","Card","startX","scrollLeft","useContext","slider","useRef","mouseDown","stopDragging","className","style","background","month","year","ref","onMouseDown","e","pageX","current","offsetLeft","onMouseUp","onMouseLeave","onMouseMove","preventDefault","scroll","map","item","index","onClick","showModalFunction","dayjs","Modal","newDescription","info","replace","useState","isOngoingCard","setOngoingCard","flipOut","setFlipOut","useEffect","onGoingCard","document","body","overflow","addEventListener","key","Loading","then","onClose","Promise","resolve","setTimeout","dangerouslySetInnerHTML","__html","airingAt","format","episode","CurrentCalendarCard","isLoading","setisLoading","success","setSuccess","isDuplicate","setIsDuplicate","event","duplicate","find","x","Date","now","Cards","animesMap","showModal","val","hideModal","length","isOngoing","CurrentCalendar","seasonObject","WINTER","SPRING","SUMMER","FALL","months","seasonKey","getMonth","currentYear","getFullYear","Object","keys","includes","getSeason","query","fetch","method","headers","Accept","variables","page","r","json","console","log","Page","media","isAdult","title","english","romaji","coverImage","extraLarge","genres","averageScore","startDate","bannerImage","nextAiringEpisode","CurrentDataFetcher","CurrentCalendarRenderer","Nav","setUser","signIn","provider","session","signOut","user_metadata","onAuthStateChange","exact","activeClassName","to","full_name","href","target","Search","setName","animeName","setAnimeName","firstUpdate","searchName","errors","alert","DataFetcher","onSubmit","placeholder","autoComplete","onChange","required","prompt","SearchRenderer","Watchlist","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f06bd5c1.chunk.js","sourcesContent":["function animeReducer(state, action) {\n  switch (action.type) {\n    case \"LOAD_ANIMES\":\n      let items = localStorage.getItem(\"list\");\n      if (items) {\n        const parsedItems = JSON.parse(items);\n        return parsedItems;\n      } else {\n        return [...state];\n      }\n\n    case \"LOAD_DATABASE_ANIMES\":\n      return action.animes;\n\n    case \"ADD_ANIME\":\n      let stateCopy = [\n        {\n          name: action.anime.name,\n          genre: action.anime.genre,\n          url: action.anime.url,\n          aid: action.anime.aid,\n          rating: action.anime.rating,\n          episodes: action.anime.episodes,\n          date: action.anime.date,\n          description: action.anime.description,\n          banner: action.anime.banner,\n          nextEpisode: action.anime.nextEpisode,\n          id: action.anime.id,\n        },\n        ...state,\n      ];\n      localStorage.setItem(\"list\", JSON.stringify(stateCopy));\n      return stateCopy;\n\n    case \"REMOVE_ANIME\":\n      let newStateCopy = state.filter((object) => object.id !== action.id);\n      localStorage.setItem(\"list\", JSON.stringify(newStateCopy));\n      return newStateCopy;\n\n    default:\n      return state;\n  }\n}\n\nexport default animeReducer;\n","function authReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SAFE_MODE\":\n      let newSafeMode = state.safeMode;\n      newSafeMode = !newSafeMode;\n      // console.log(newSafeMode);\n      return {\n        safeMode: newSafeMode,\n        loading: state.loading,\n        password: state.password,\n        passwordToggle: state.passwordToggle,\n        selectedState: state.selectedState,\n      };\n\n    case \"TOGGLE_LOADING\":\n      let newLoading = state.loading;\n      newLoading = !newLoading;\n      return {\n        safeMode: state.safeMode,\n        loading: newLoading,\n        password: state.password,\n        passwordToggle: state.passwordToggle,\n        selectedState: state.selectedState,\n      };\n\n    case \"NULLIFER\":\n      return {\n        ...state,\n        selectedState: null,\n      };\n\n    case \"CHECK_PASSWORD\":\n      let newPass = state.password;\n      let newPasswordToggle = state.passwordToggle;\n      //If password is correct set it to true and toggle passwordToggle to run useEffect Input.jsx line 98\n      if (action.payload === \"stillwinter\") {\n        newPass = true;\n        newPasswordToggle = !newPasswordToggle;\n      } else if (action.payload === \"xD\") {\n        //The unique strategy execution.. Notice it doesnt have passwordToggle change so thats why useEffect doesnt run.\n        newPass = false;\n      } else {\n        //If password is wrong this toggles the passwordToggle and runs the use effect for error presentation.\n        newPasswordToggle = !newPasswordToggle;\n      }\n      return {\n        safeMode: state.safeMode,\n        loading: state.loading,\n        password: newPass,\n        passwordToggle: newPasswordToggle,\n        selectedState: state.selectedState,\n      };\n\n    case \"SET_SELECTED_STATE\":\n      let newSelectedState = action.payload;\n      return { ...state, selectedState: newSelectedState };\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","function animeReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ANIME\":\n      let stateCopy = [\n        ...state,\n        {\n          name: action.anime.name,\n          genre: action.anime.genre,\n          url: action.anime.url,\n          aid: action.anime.aid,\n          rating: action.anime.rating,\n          description: action.anime.description,\n          episodes: action.anime.episodes,\n          date: action.anime.date,\n          banner: action.anime.banner,\n          nextEpisode: action.anime.nextEpisode,\n          // id: Date.now(),\n        },\n      ];\n      return stateCopy;\n\n    case \"CLEAR\":\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nexport default animeReducer;\n","function searchReducer(state, action) {\n  switch (action.type) {\n    case \"SEARCH_ANIME\":\n      let stateCopy = [\n        ...state,\n        {\n          name: action.anime.name,\n          genre: action.anime.genre,\n          url: action.anime.url,\n          aid: action.anime.aid,\n          rating: action.anime.rating,\n          episodes: action.anime.episodes,\n          date: action.anime.date,\n          description: action.anime.description,\n          banner: action.anime.banner,\n          nextEpisode: action.anime.nextEpisode,\n          id: action.anime.id,\n        },\n      ];\n      return stateCopy;\n\n    case \"CLEAR\":\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nexport default searchReducer;\n","import { createClient } from \"@supabase/supabase-js\";\nrequire(\"dotenv\").config();\n\nconst options = {\n  schema: \"public\",\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n};\n\n// Create a single supabase client for interacting with your database\nconst supabase = createClient(\n  process.env.REACT_APP_URL,\n  process.env.REACT_APP_ANON_PUBLIC,\n  options\n);\n\nexport default supabase;\n","import React, { createContext, useReducer } from \"react\";\nimport animeReducer from \"../customHooks/animeReducer\";\nimport authReducer from \"../customHooks/authReducer\";\nimport currentAnimeReducer from \"../customHooks/currentAnimeReducer\";\nimport searchReducer from \"../customHooks/searchReducer\";\nimport supabase from \"../supabase\";\n\nexport const AnimeContext = createContext();\n\nfunction AnimeContextProvider(props) {\n  const [animes, dispatch] = useReducer(animeReducer, []);\n  const [currentAnimes, currentAnimeDispatch] = useReducer(\n    currentAnimeReducer,\n    []\n  );\n\n  async function loadWatchlist() {\n    const user = supabase.auth.user();\n    let { data, error } = await supabase\n      .from(\"watchlist\")\n      .select()\n      .eq(\"email\", user.email);\n\n    data = data[0].watchlist;\n\n    dispatch({ type: \"LOAD_DATABASE_ANIMES\", animes: data });\n  }\n\n  function syncWatchlist() {\n    let items = localStorage.getItem(\"list\");\n    if (items) {\n      const parsedItems = JSON.parse(items);\n      items = parsedItems;\n    } else {\n      items = [];\n    }\n    setWatchlist(items);\n  }\n\n  async function setWatchlist(items) {\n    const user = supabase.auth.user();\n\n    const { data, error } = await supabase\n      .from(\"watchlist\")\n      .upsert({ email: user.email, watchlist: items });\n  }\n\n  const [auth, authenticator] = useReducer(authReducer, {\n    safeMode: true,\n    loading: false,\n    password: false,\n    passwordToggle: false,\n    selectedState: null,\n  });\n  const [search, searchAnimes] = useReducer(searchReducer, []);\n  return (\n    <AnimeContext.Provider\n      value={{\n        animes,\n        dispatch,\n        auth,\n        authenticator,\n        currentAnimes,\n        currentAnimeDispatch,\n        search,\n        searchAnimes,\n        setWatchlist,\n        syncWatchlist,\n        loadWatchlist,\n      }}\n    >\n      {props.children}\n    </AnimeContext.Provider>\n  );\n}\n\nexport default AnimeContextProvider;\n","import { useContext, useRef } from \"react\";\nimport \"../card.css\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\n\nfunction Card(props) {\n  const { dispatch } = useContext(AnimeContext);\n  const slider = useRef(null);\n  // const [description, setDescription] = useState(props.description);\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  let mouseDown = false;\n  let startX, scrollLeft;\n\n  let startDragging = function (e) {\n    mouseDown = true;\n    startX = e.pageX - slider.current.offsetLeft;\n    scrollLeft = slider.current.scrollLeft;\n  };\n  const stopDragging = () => {\n    mouseDown = false;\n  };\n\n  function handleDelete() {\n    dispatch({ type: \"REMOVE_ANIME\", id: props.id });\n  }\n\n  function mouseMoveEvent(e) {\n    e.preventDefault();\n\n    if (!mouseDown) {\n      return;\n    }\n    const x = e.pageX - slider.current.offsetLeft;\n    const scroll = x - startX;\n    slider.current.scrollLeft = scrollLeft - scroll;\n  }\n  // let description = props.description;\n  // let newDescription = description.replace(/\\<[^>]+?>/, \"\");\n  // console.log(props);\n\n  return (\n    <>\n      <div\n        className=\"card_outer flex items-end z-10\"\n        style={{\n          background: `linear-gradient(0deg, rgba(0, 0, 0, 0.08), rgba(0, 0, 0, 0.08)),\n    url(${props.url}) no-repeat center center/cover`,\n        }}\n      >\n        <div className=\"card_content_cover\"></div>\n        <div className=\"card_content my-2\">\n          <h1 className=\"pr-2 font-bold text-xl\">{props.name}</h1>\n          <div className=\"card_details\">\n            {props.episodes ? (\n              <div className=\"episodes\">EP : {props.episodes} </div>\n            ) : (\n              \"\"\n            )}\n\n            {props.date ? (\n              <div className=\"year\">\n                {months[props.date.month - 1]} {props.date.year}{\" \"}\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"card_rating\">\n              {props.rating ? (\n                <>\n                  {props.rating / 10} <i className=\"fas fa-star\"></i>\n                </>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n\n          <div\n            className=\"genre mb-2\"\n            ref={slider}\n            onMouseDown={startDragging}\n            onMouseUp={stopDragging}\n            onMouseLeave={stopDragging}\n            onMouseMove={mouseMoveEvent}\n          >\n            {props.genre.map((item, index) => {\n              return (\n                <p\n                  className=\"genre_item mr-2 rounded-full py-1 my-1 px-2 bg-gray-600 text-sm bg-opacity-80\"\n                  key={index}\n                >\n                  {item}\n                </p>\n              );\n            })}\n          </div>\n          <div className=\"flex\">\n            <button\n              id=\"delete\"\n              className=\"flex justify-center items-center p-2 w-1/2 mx-2 bg-red-600 rounded-md text-white active:text-red-600 active:bg-gray-200 hover:text-red-600 hover:bg-gray-200\"\n              onClick={handleDelete}\n            >\n              <i className=\"far fa-trash-alt mr-2\"></i>DELETE\n            </button>\n            <button\n              onClick={() => {\n                props.showModalFunction(props.id);\n              }}\n              className=\"flex justify-center items-center p-2 w-1/2 mx-2 bg-blue-600 rounded-md text-white active:text-red-600 active:bg-gray-200 hover:text-red-600 hover:bg-gray-200\"\n            >\n              MORE INFO\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import { useContext, useEffect, useState } from \"react\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nlet dayjs = require(\"dayjs\");\n\nfunction Modal(props) {\n  let newDescription = props.info.description.replace(/\\([^\\)]+?\\)/g, \"\");\n  const [isOngoingCard, setOngoingCard] = useState(false);\n  const { auth } = useContext(AnimeContext);\n  const [flipOut, setFlipOut] = useState(false);\n\n  useEffect(() => {\n    if (props.onGoingCard) {\n      setOngoingCard(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (auth.selectedState) {\n      document.body.style.overflow = \"hidden\";\n      document.addEventListener(\"keydown\", (e) => {\n        if (e.key === \"Escape\") {\n          Loading().then(() => {\n            props.onClose();\n          });\n        }\n      });\n    }\n  }, [auth.selectedState]);\n\n  const Loading = () => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, 1000);\n    });\n  };\n\n  const Loading2 = () => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, 500);\n    });\n  };\n\n  // console.log(newDescription);\n  return (\n    <>\n      <div\n        id=\"myModal\"\n        className=\"modal py-10 fixed flex justify-center align-middle left-0 bottom-0 right-0 top-0 w-full h-full\"\n      >\n        <div\n          className={`modal-content ${\n            flipOut ? \"flipOut\" : \"\"\n          } text-white mb-2 flex flex-col rounded-lg relative text-sm w-5/6 sm:w-5/6 xl:w-1/2 lg:w-1/2 md:w-1/2 max-h-full p-4 overflow-y-auto bg-gray-900 sm:text-base xl:text-base lg:text-base md:text-base`}\n        >\n          <h1\n            style={{\n              background: `linear-gradient(90deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.1)),\n    url(${props.info.banner}) no-repeat center center/cover`,\n            }}\n            className=\"text-2xl py-7 px-3 text-white font-bold mb-2 xl:text-3xl lg:text-2xl md:text-2xl sm:2xl\"\n          >\n            {props.info.name}\n          </h1>\n\n          <div\n            className={props.info.nextEpisode ? \"pb-8\" : \"\"}\n            dangerouslySetInnerHTML={{\n              __html: newDescription,\n            }}\n          ></div>\n          {isOngoingCard && props.info.nextEpisode ? (\n            <div className=\"pb-14\">\n              <p>\n                Next Episode On:{\" \"}\n                {dayjs(props.info.nextEpisode.airingAt * 1000).format(\n                  \"D MMMM YYYY\"\n                )}\n              </p>\n              {/* <p>Time Remaining: </p> */}\n              <p>Upcoming Episode No: {props.info.nextEpisode.episode}</p>\n            </div>\n          ) : null}\n          <button\n            className=\"sticky bottom-0 ml-auto mr-2 mb-5 bg-red-500 hover:bg-yellow-300 hover:text-black text-white font-bold py-2 px-4 rounded\"\n            onClick={() => {\n              setFlipOut(true);\n              Loading2().then(() => {\n                props.onClose();\n              });\n            }}\n          >\n            CLOSE\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Modal;\n","import { useContext, useRef, useState } from \"react\";\nimport \"../card.css\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\n\nfunction CurrentCalendarCard(props) {\n  const { dispatch, animes, setWatchlist } = useContext(AnimeContext);\n  const [isLoading, setisLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isDuplicate, setIsDuplicate] = useState(false);\n\n  const Loading = () => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, 1000);\n    });\n  };\n\n  const slider = useRef(null);\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  let mouseDown = false;\n  let startX, scrollLeft;\n\n  let startDragging = function (e) {\n    mouseDown = true;\n    startX = e.pageX - slider.current.offsetLeft;\n    scrollLeft = slider.current.scrollLeft;\n  };\n  const stopDragging = (event) => {\n    mouseDown = false;\n  };\n\n  // useEffect(() => {\n  //   dispatch({ type: \"LOAD_ANIMES\" });\n  // }, []);\n\n  function mouseMoveEvent(e) {\n    e.preventDefault();\n\n    if (!mouseDown) {\n      return;\n    }\n    const x = e.pageX - slider.current.offsetLeft;\n    const scroll = x - startX;\n    slider.current.scrollLeft = scrollLeft - scroll;\n  }\n\n  function handleAdd() {\n    dispatch({\n      type: \"ADD_ANIME\",\n      anime: {\n        name: props.name,\n        genre: props.genre,\n        url: props.url,\n        aid: props.aid,\n        rating: props.rating,\n        description: props.description,\n        episodes: props.episodes,\n        date: props.date,\n        banner: props.banner,\n        nextEpisode: props.nextEpisode,\n        id: Date.now(),\n      },\n    });\n    setWatchlist();\n  }\n\n  function successFunction() {\n    setSuccess(true);\n    Loading().then(() => {\n      setSuccess(false);\n    });\n  }\n\n  function duplicateWatchlist() {\n    setIsDuplicate(true);\n    Loading().then(() => {\n      setIsDuplicate(false);\n    });\n  }\n\n  return (\n    <>\n      <div\n        className=\"card_outer flex items-end z-10\"\n        style={{\n          background: `linear-gradient(0deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1)),\n    url(${props.url}) no-repeat center center/cover`,\n        }}\n      >\n        <div className=\"card_content_cover\"></div>\n        <div className=\"card_content my-2\">\n          <h1 className=\"pr-2 font-bold text-xl\">{props.name}</h1>\n          <div className=\"card_details\">\n            {props.episodes ? (\n              <div className=\"episodes\">EP : {props.episodes} </div>\n            ) : (\n              \"\"\n            )}\n\n            {props.date ? (\n              <div className=\"year\">\n                {months[props.date.month - 1]} {props.date.year}{\" \"}\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"card_rating\">\n              {props.rating ? (\n                <>\n                  {\" \"}\n                  {props.rating / 10} <i className=\"fas fa-star\"></i>\n                </>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n\n          <div\n            className=\"genre mb-2\"\n            ref={slider}\n            onMouseDown={startDragging}\n            onMouseUp={stopDragging}\n            onMouseLeave={stopDragging}\n            onMouseMove={mouseMoveEvent}\n          >\n            {props.genre.map((item, index) => {\n              return (\n                <p\n                  className=\"genre_item mr-2 rounded-full py-1 my-1 px-2 bg-gray-600 text-sm bg-opacity-80\"\n                  key={index}\n                >\n                  {item}\n                </p>\n              );\n            })}\n          </div>\n          <div className=\"button flex\">\n            <button\n              id=\"add\"\n              className={\n                (isLoading\n                  ? \"bg-yellow-300 text-gray-900 \"\n                  : success\n                  ? \"bg-green-600 text-white \"\n                  : isDuplicate\n                  ? \"bg-red-600 text-white \"\n                  : \"bg-blue-600 text-white \") +\n                \"flex justify-center  items-center p-2 w-1/2 mx-auto rounded-md text-white active:text-gray-900 active:bg-gray-200\"\n              }\n              onClick={() => {\n                // console.log(isDuplicate);\n                let duplicate = animes.find((x) => {\n                  return x.aid === props.aid;\n                });\n\n                setisLoading(true);\n                Loading().then(() => {\n                  // console.log(isDuplicate);\n                  if (duplicate) {\n                    // console.log(\"IF RAN\");\n                    duplicateWatchlist();\n                    setisLoading(false);\n                  } else {\n                    // console.log(\"ELSE RAN\");\n                    handleAdd();\n                    successFunction();\n                    setisLoading(false);\n                  }\n                });\n              }}\n            >\n              {isDuplicate ? (\n                <i className=\"fas fa-times-circle mr-2\"></i>\n              ) : (\n                <i className=\"far fa-plus-square mr-2\"></i>\n              )}\n              {isLoading\n                ? \"LOADING\"\n                : success\n                ? \"SUCCESS\"\n                : isDuplicate\n                ? \"INCLUDED\"\n                : \"WATCHLIST\"}\n            </button>\n            <button\n              onClick={() => {\n                props.showModalFunction(props.aid, true);\n              }}\n              className=\"flex justify-center items-center p-2 w-1/2 mx-2 bg-pink-600 rounded-md text-white active:text-red-600 active:bg-gray-200 hover:text-red-600 hover:bg-gray-200\"\n            >\n              MORE INFO\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CurrentCalendarCard;\n","import Card from \"./Card\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nimport Modal from \"./Modal\";\nimport { useContext } from \"react\";\nimport CurrentCalendarCard from \"./CurrentCalendarCard\";\n\nfunction Cards(props) {\n  let animesMap;\n  const { animes, authenticator, auth, currentAnimes } =\n    useContext(AnimeContext);\n\n  props.type === \"Current\" ? (animesMap = currentAnimes) : (animesMap = animes);\n  function showModal(id, val = false) {\n    if (val) {\n      let aid = id;\n      let newSelectedState = currentAnimes.find((x) => x.aid === aid);\n      authenticator({ type: \"SET_SELECTED_STATE\", payload: newSelectedState });\n    } else {\n      let newSelectedState = animes.find((x) => x.id === id);\n      authenticator({ type: \"SET_SELECTED_STATE\", payload: newSelectedState });\n    }\n  }\n\n  function hideModal() {\n    document.body.style.overflow = \"auto\";\n    authenticator({ type: \"NULLIFER\" });\n  }\n\n  return animesMap.length ? (\n    props.type === \"Current\" ? (\n      <div className=\"cards grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-3 mt-6 justify-items-center \">\n        {animesMap.map((anime, index) => {\n          return (\n            <CurrentCalendarCard\n              name={anime.name}\n              key={index}\n              aid={anime.aid}\n              genre={anime.genre}\n              rating={anime.rating}\n              episodes={anime.episodes}\n              url={anime.url}\n              description={anime.description}\n              date={anime.date}\n              banner={anime.banner}\n              nextEpisode={anime.nextEpisode}\n              showModalFunction={showModal}\n              isOngoing={true}\n            />\n          );\n        })}\n        {auth.selectedState && (\n          <Modal\n            info={auth.selectedState}\n            onClose={hideModal}\n            onGoingCard={true}\n          />\n        )}\n      </div>\n    ) : (\n      <div className=\"cards grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-4 my-10 justify-items-center \">\n        {animesMap.map((anime, index) => {\n          return (\n            <Card\n              // key={index}\n              name={anime.name}\n              key={index}\n              genre={anime.genre}\n              rating={anime.rating}\n              episodes={anime.episodes}\n              description={anime.description}\n              url={anime.url}\n              date={anime.date}\n              id={anime.id}\n              showModalFunction={showModal}\n            />\n          );\n        })}\n        {auth.selectedState && (\n          <Modal\n            info={auth.selectedState}\n            onClose={hideModal}\n            onGoingCard={false}\n          />\n        )}\n      </div>\n    )\n  ) : (\n    <>\n      <h1 className=\"text-4xl text-white mt-32 text-center\">\n        WoW! Such Silence......\n      </h1>\n      <p className=\"text-2xl text-white my-5 text-center\">Go On! Add Some</p>\n    </>\n  );\n}\n\nexport default Cards;\n","import { useContext, useEffect } from \"react\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nimport Cards from \"./Cards\";\n\nfunction CurrentCalendar() {\n  const { currentAnimes, currentAnimeDispatch, auth } =\n    useContext(AnimeContext);\n\n  let date = new Date();\n\n  let seasonObject = {\n    WINTER: [\"January\", \"February\", \"March\"],\n    SPRING: [\"April\", \"May\", \"June\"],\n    SUMMER: [\"July\", \"August\", \"September\"],\n    FALL: [\"October\", \"November\", \"December\"],\n  };\n\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  function CurrentDataFetcher() {\n    let seasonKey;\n    let month = months[date.getMonth()];\n    let currentYear = date.getFullYear();\n    getSeason(month);\n\n    function getSeason(month) {\n      Object.keys(seasonObject).find((key) => {\n        if (seasonObject[key].includes(`${month}`)) {\n          seasonKey = key;\n        }\n      });\n    }\n\n    const query = `query ($page: Int = 1) {\n        Page(page: $page, perPage: 50) {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          media(type: ANIME, status: RELEASING, season: ${seasonKey}, seasonYear: ${currentYear}, sort:POPULARITY_DESC) {\n            id\n            title {\n              english\n              romaji\n            }\n            coverImage {\n              extraLarge\n              large\n            }\n            startDate {\n              year\n              month\n              day\n            }\n            status\n            description\n            episodes\n            genres\n            bannerImage\n            isAdult\n            averageScore\n            nextAiringEpisode {\n              airingAt\n              timeUntilAiring\n              episode\n            }\n          }\n        }\n      }`;\n    fetch(\"https://graphql.anilist.co\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        query,\n        variables: {\n          page: 1,\n        },\n      }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        console.log(\"data returned:\", data);\n        let apiData = data.data.Page.media;\n        apiData.map((item) => {\n          if (auth.safeMode && item.isAdult) {\n            return;\n          } else {\n            currentAnimeDispatch({\n              type: \"ADD_ANIME\",\n              anime: {\n                name: item.title.english\n                  ? item.title.english\n                  : item.title.romaji,\n                url: item.coverImage.extraLarge,\n                genre: item.genres,\n                description: item.description,\n                rating: item.averageScore,\n                episodes: item.episodes,\n                date: item.startDate,\n                banner: item.bannerImage,\n                nextEpisode: item.nextAiringEpisode,\n                aid: item.id,\n              },\n            });\n          }\n          return null;\n        });\n        //   console.log(apiData);\n        //   data.data.Page.media.map((item, index) => {\n        //     currentAnimeDispatch({\n        //       type: \"ADD_ANIME\",\n        //       anime: {\n        //         name: item.title.english ? item.title.english : item.title.romaji,\n        //         url: item.coverImage.extraLarge,\n        //         genre: item.genres,\n        //         aid: item.id,\n        //         rating: item.averageScore,\n        //         episodes: item.episodes,\n        //         date: item.startDate,\n        //       },\n        //     });\n        //   });\n      });\n  }\n  useEffect(() => {\n    CurrentDataFetcher();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return currentAnimes.length > 0 ? (\n    <Cards type=\"Current\" />\n  ) : (\n    <div className=\"text-4xl text-white mt-32 text-center\"> Loading.... </div>\n  );\n}\n\nexport default CurrentCalendar;\n","import { useContext, useEffect } from \"react\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nimport CurrentCalendar from \"./CurrentCalendar\";\n\nfunction CurrentCalendarRenderer() {\n  const { searchAnimes } = useContext(AnimeContext);\n  useEffect(() => {\n    searchAnimes({ type: \"CLEAR\" });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return <CurrentCalendar />;\n}\n\nexport default CurrentCalendarRenderer;\n","import { useEffect, useState, useContext } from \"react\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nimport { NavLink } from \"react-router-dom\";\nimport { FaGithub } from \"react-icons/fa\";\nimport supabase from \"../supabase\";\n\nfunction Nav() {\n  const [user, setUser] = useState(null);\n  const { syncWatchlist, loadWatchlist } = useContext(AnimeContext);\n\n  useEffect(() => {\n    const user = supabase.auth.user();\n    if (user) {\n      setUser(user.user_metadata);\n    }\n    supabase.auth.onAuthStateChange((event, session) => {\n      console.log(event, session);\n      if (event === \"SIGNED_IN\") {\n        setUser(session.user.user_metadata);\n        loadWatchlist();\n      }\n      if (event === \"SIGNED_OUT\") setUser(null);\n    });\n  }, [loadWatchlist]);\n\n  async function signInWithDiscord() {\n    const { user, session, error } = await supabase.auth.signIn({\n      provider: \"discord\",\n    });\n  }\n  async function signout() {\n    const { error } = await supabase.auth.signOut();\n    console.log({ error });\n  }\n\n  return (\n    <header className=\"text-gray-400 bg-gray-900 body-font\">\n      <div className=\"w-full flex flex-wrap px-5 py-4 flex-col md:flex-row items-center\">\n        <div className=\"flex title-font font-medium items-center  text-white mb-4 md:mb-0\">\n          <span className=\"ml-3 cursor-default text-2xl\">\n            {\"STILLWATER </>\"}\n          </span>\n        </div>\n        <nav className=\"md:ml-auto flex flex-wrap justify-center items-center text-lg \">\n          <NavLink\n            exact\n            activeClassName=\"active_link\"\n            to=\"/search\"\n            className=\"px-4 py-2 hover:text-white\"\n          >\n            Search\n          </NavLink>\n          <NavLink\n            exact\n            activeClassName=\"active_link\"\n            to=\"/\"\n            className=\" px-4 py-2 hover:text-white\"\n          >\n            Watchlist\n          </NavLink>\n          <NavLink\n            exact\n            activeClassName=\"active_link\"\n            to=\"/current\"\n            className=\"px-4 py-2 hover:text-white\"\n          >\n            Ongoing\n          </NavLink>\n          <button\n            className=\"px-4 py-2 hover:text-white\"\n            onClick={!user ? signInWithDiscord : null}\n          >\n            {user ? user.full_name : \"Login\"}\n          </button>\n          <button\n            className={`px-4 py-2 hover:text-white ${user ? \"\" : \"hidden\"}`}\n            onClick={signout}\n          >\n            {user ? \"Logout\" : null}\n          </button>\n          <button\n            className={`px-4 py-2 hover:text-white ${user ? \"\" : \"hidden\"}`}\n            onClick={syncWatchlist}\n          >\n            Sync\n          </button>\n          <a\n            href=\"https://github.com/ST1LLWATER\"\n            target=\"_blank\"\n            className=\"px-4 py-2 hover:text-white text-2xl\"\n          >\n            <FaGithub />\n          </a>\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;\n","import { useState, useRef, useEffect, useContext } from \"react\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\nimport CurrentCalendarCard from \"./CurrentCalendarCard\";\nimport Modal from \"./Modal\";\n\nfunction Search() {\n  const [name, setName] = useState(\"\");\n  const [animeName, setAnimeName] = useState(\"\");\n  const firstUpdate = useRef(true);\n  const { searchAnimes, auth, search, authenticator, currentAnimeDispatch } =\n    useContext(AnimeContext);\n\n  function showModal(id, val = false) {\n    let aid = id;\n    let newSelectedState = search.find((x) => x.aid === aid);\n    authenticator({ type: \"SET_SELECTED_STATE\", payload: newSelectedState });\n  }\n\n  function hideModal() {\n    document.body.style.overflow = \"auto\";\n    authenticator({ type: \"NULLIFER\" });\n  }\n\n  //FETCHING DATA FROM API AND SENDING TO REDUCER TO ADD IT TO ANIMES STATE OF REDUCER\n  function DataFetcher(searchName) {\n    // console.log(searchName, typeof searchName);\n    const query = `query ($page: Int = 1) {\n        Page(page: $page, perPage: 50) {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          media(type: ANIME, search:\"${searchName}\", sort:POPULARITY_DESC) {\n            id\n            title {\n              english\n              romaji\n            }\n            coverImage {\n              extraLarge\n              large\n            }\n            startDate {\n              year\n              month\n              day\n            }\n            status\n            description\n            episodes\n            genres\n            bannerImage\n            isAdult\n            averageScore\n            nextAiringEpisode {\n              airingAt\n              timeUntilAiring\n              episode\n            }\n          }\n        }\n      }`;\n\n    fetch(\"https://graphql.anilist.co\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        query,\n        variables: {},\n      }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        if (data.errors || !data.data.Page.media.length) {\n          alert(\"ANIME NAME NOT FOUND... BE MORE SPECIFIC\");\n        } else {\n          console.log(data);\n          let apiData = data.data.Page.media;\n          apiData.map((item) => {\n            if (auth.safeMode && item.isAdult) {\n              return;\n            } else {\n              searchAnimes({\n                type: \"SEARCH_ANIME\",\n                anime: {\n                  name: item.title.english\n                    ? item.title.english\n                    : item.title.romaji,\n                  url: item.coverImage.extraLarge,\n                  genre: item.genres,\n                  description: item.description,\n                  rating: item.averageScore,\n                  episodes: item.episodes,\n                  date: item.startDate,\n                  banner: item.bannerImage,\n                  nextEpisode: item.nextAiringEpisode,\n                  aid: item.id,\n                },\n              });\n            }\n            return null;\n          });\n        }\n      });\n  }\n  //Taking input from form and adding the requested name to animeName state and clearing the form input\n  function handleSubmit(e) {\n    e.preventDefault();\n    setAnimeName(name);\n    setName(\"\");\n  }\n\n  useEffect(() => {\n    currentAnimeDispatch({ type: \"CLEAR\" });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //LOADING ANIMES FROM LOCAL STORAGE AND IF WE GOT NEW ANIME REQ FROM INPUT i.e. animeName state changed above SEND THAT ANIME REQ TO API\n  useEffect(() => {\n    if (animeName) {\n      searchAnimes({ type: \"CLEAR\" });\n      //If to prevent sending an empty req to API as use effect runs when DOM loads too and animeName is \"\" i.e false at beginning\n      DataFetcher(animeName);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animeName]); // <---- NOTICE THE DEPENDENCY ARRAY OF animeName which runs it everytime user enters a new anime req.\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      console.log(\"Remember The Stillwinter\");\n      //If to prevent the useeffect to run the main code on firstupdate i.e when DOM LOADS\n      firstUpdate.current = false;\n      return;\n    } else {\n      //Main code to add loading and change the safe mode button\n      if (auth.password) {\n        Loading().then(() => {\n          authenticator({ type: \"TOGGLE_SAFE_MODE\" });\n          authenticator({ type: \"TOGGLE_LOADING\" });\n        });\n      } else {\n        Loading().then(() => {\n          alert(\"WRONG PASSWORD!\");\n          authenticator({ type: \"TOGGLE_LOADING\" });\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [auth.passwordToggle]);\n\n  //Loading promise for loading animation of 1s\n  const Loading = () => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, 1000);\n    });\n  };\n\n  const LoadingAuth = () => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, 3000);\n    });\n  };\n\n  return (\n    <div className=\"my-8\">\n      <form\n        id=\"input_form\"\n        className=\"mx-8 mt-4 flex flex-col justify-center items-center space-x-4 xl:flex-row lg:flex-row md:flex-row sm:flex-col \"\n        onSubmit={handleSubmit}\n      >\n        <input\n          id=\"name\"\n          className=\"w-full sm:w-full xl:w-3/4 lg:w-3/4 md:w-3/4 mt-4 bg-gray-600 rounded border border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-400 text-base outline-none text-white py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n          type=\"text\"\n          value={name}\n          placeholder=\"Search Anime\"\n          autoComplete=\"off\"\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n        <div className=\"buttons flex justify-center items-center space-x-4 mt-4\">\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 rounded hover:bg-white hover:text-blue-700 bg-blue-700 text-white\"\n          >\n            SEARCH\n          </button>\n          <button\n            className={\n              \"px-4 py-2 rounded text-white whitespace-nowrap \" +\n              (auth.loading\n                ? \"bg-yellow-300 text-gray-900\"\n                : auth.safeMode\n                ? \"bg-green-700 \"\n                : \"bg-red-700 \")\n            }\n            type=\"button\"\n            onClick={() => {\n              //This IF prevents asking for password when coming back from SAFE MODE OFF to ON\n              if (auth.password) {\n                authenticator({ type: \"TOGGLE_LOADING\" });\n                authenticator({ type: \"CHECK_PASSWORD\", payload: \"xD\" }); //Unique Strategy To prevent loading of useEffect and set password to false again. Check Dependency of UseEffect line 118 authReducer for more info.\n                Loading().then(() => {\n                  authenticator({ type: \"TOGGLE_SAFE_MODE\" });\n                  authenticator({ type: \"TOGGLE_LOADING\" });\n                });\n              } else {\n                //If Safe Mode Is ON Ask Password To turn it off\n                authenticator({ type: \"TOGGLE_LOADING\" });\n                LoadingAuth().then(() => {\n                  let password = prompt(\"ENTER PASSWORD\");\n                  if (password === null) {\n                    authenticator({ type: \"TOGGLE_LOADING\" });\n                    return;\n                  } else if (password === \"\") {\n                    authenticator({ type: \"TOGGLE_LOADING\" });\n                    return;\n                  } else {\n                    authenticator({\n                      type: \"CHECK_PASSWORD\",\n                      payload: password,\n                    });\n                  }\n                });\n              }\n            }}\n          >\n            {auth.loading //Button text rendering based on states\n              ? \"LOADING\"\n              : auth.safeMode\n              ? \"SAFE MODE:ON\"\n              : \"SAFE MODE:OFF\"}\n          </button>\n        </div>\n      </form>\n      <div className=\"cards grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-3 mt-6 justify-items-center \">\n        {search\n          ? search.map((anime) => {\n              return (\n                <CurrentCalendarCard\n                  name={anime.name}\n                  key={anime.id}\n                  aid={anime.aid}\n                  genre={anime.genre}\n                  rating={anime.rating}\n                  episodes={anime.episodes}\n                  url={anime.url}\n                  description={anime.description}\n                  date={anime.date}\n                  banner={anime.banner}\n                  nextEpisode={anime.nextEpisode}\n                  showModalFunction={showModal}\n                />\n              );\n            })\n          : \"\"}\n      </div>\n      {auth.selectedState && (\n        <Modal\n          info={auth.selectedState}\n          onClose={hideModal}\n          onGoingCard={true}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Search;\n","import Search from \"./Search\";\n\nexport default function SearchRenderer() {\n  return (\n    <>\n      <Search />\n    </>\n  );\n}\n","import Cards from \"./Cards\";\nimport { useContext, useEffect } from \"react\";\nimport { AnimeContext } from \"../contexts/AnimeContext\";\n\nfunction Watchlist() {\n  const { dispatch, currentAnimeDispatch, searchAnimes } =\n    useContext(AnimeContext);\n  useEffect(() => {\n    dispatch({ type: \"LOAD_ANIMES\" });\n    currentAnimeDispatch({ type: \"CLEAR\" });\n    searchAnimes({ type: \"CLEAR\" });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Cards type=\"watchlist\" />\n    </>\n  );\n}\n\nexport default Watchlist;\n","import { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport CurrentCalendarRenderer from \"./components/CurrentCalendarRenderer\";\nimport Nav from \"./components/Nav\";\nimport SearchRenderer from \"./components/SearchRenderer\";\nimport Watchlist from \"./components/Watchlist\";\nimport AnimeContextProvider from \"./contexts/AnimeContext\";\n\nfunction App() {\n  return (\n    <AnimeContextProvider>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/search\" component={SearchRenderer} />\n        <Route exact path=\"/\" component={Watchlist} />\n        <Route exact path=\"/current\" component={CurrentCalendarRenderer} />\n      </Switch>\n    </AnimeContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}