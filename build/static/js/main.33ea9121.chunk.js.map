{"version":3,"sources":["customHooks/animeReducer.js","customHooks/authReducer.js","customHooks/currentAnimeReducer.js","contexts/AnimeContext.js","components/Card.jsx","components/Modal.jsx","components/CurrentCalendarCard.jsx","components/Cards.jsx","components/CurrentCalendar.jsx","components/CurrentCalendarRenderer.jsx","components/Nav.jsx","components/Input.jsx","components/Watchlist.jsx","App.js","index.js"],"names":["animeReducer","state","action","type","items","localStorage","getItem","JSON","parse","stateCopy","name","anime","genre","url","aid","rating","episodes","date","description","banner","id","setItem","stringify","newStateCopy","filter","object","authReducer","newSafeMode","safeMode","loading","password","passwordToggle","selectedState","newLoading","newPass","newPasswordToggle","payload","newSelectedState","AnimeContext","createContext","AnimeContextProvider","props","useReducer","animes","dispatch","currentAnimeReducer","currentAnimes","currentAnimeDispatch","auth","authenticator","Provider","value","children","Card","startX","scrollLeft","useContext","slider","useRef","mouseDown","stopDragging","className","style","background","month","year","ref","onMouseDown","e","pageX","current","offsetLeft","onMouseUp","onMouseLeave","onMouseMove","preventDefault","scroll","map","item","index","onClick","showModalFunction","class","Modal","newDescription","info","replace","useState","flipOut","setFlipOut","useEffect","document","body","overflow","addEventListener","key","Loading","then","onClose","Promise","resolve","setTimeout","dangerouslySetInnerHTML","__html","CurrentCalendarCard","addWatchlist","setAddWatchlist","success","setSuccess","event","Date","now","Cards","animesMap","showModal","find","x","length","CurrentCalendar","seasonObject","WINTER","SPRING","SUMMER","FALL","months","seasonKey","getMonth","currentYear","getFullYear","Object","keys","includes","getSeason","query","fetch","method","headers","Accept","variables","page","r","json","data","console","log","Page","media","isAdult","title","english","romaji","coverImage","extraLarge","genres","averageScore","startDate","bannerImage","CurrentDataFetcher","CurrentCalendarRenderer","Nav","to","Input","setName","animeName","setAnimeName","firstUpdate","errors","Media","alert","DataFetcher","onSubmit","placeholder","autoComplete","onChange","target","required","prompt","Watchlist","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33ea9121.chunk.js","sourcesContent":["function animeReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOAD_ANIMES\":\r\n      let items = localStorage.getItem(\"list\");\r\n      if (items) {\r\n        const parsedItems = JSON.parse(items);\r\n        return parsedItems;\r\n      } else {\r\n        return [...state];\r\n      }\r\n\r\n    case \"ADD_ANIME\":\r\n      let stateCopy = [\r\n        {\r\n          name: action.anime.name,\r\n          genre: action.anime.genre,\r\n          url: action.anime.url,\r\n          aid: action.anime.aid,\r\n          rating: action.anime.rating,\r\n          episodes: action.anime.episodes,\r\n          date: action.anime.date,\r\n          description: action.anime.description,\r\n          banner: action.anime.banner,\r\n          id: action.anime.id,\r\n        },\r\n        ...state,\r\n      ];\r\n      localStorage.setItem(\"list\", JSON.stringify(stateCopy));\r\n      return stateCopy;\r\n\r\n    case \"REMOVE_ANIME\":\r\n      let newStateCopy = state.filter((object) => object.id !== action.id);\r\n      localStorage.setItem(\"list\", JSON.stringify(newStateCopy));\r\n      return newStateCopy;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animeReducer;\r\n","function authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SAFE_MODE\":\r\n      let newSafeMode = state.safeMode;\r\n      newSafeMode = !newSafeMode;\r\n      // console.log(newSafeMode);\r\n      return {\r\n        safeMode: newSafeMode,\r\n        loading: state.loading,\r\n        password: state.password,\r\n        passwordToggle: state.passwordToggle,\r\n        selectedState: state.selectedState,\r\n      };\r\n\r\n    case \"TOGGLE_LOADING\":\r\n      let newLoading = state.loading;\r\n      newLoading = !newLoading;\r\n      return {\r\n        safeMode: state.safeMode,\r\n        loading: newLoading,\r\n        password: state.password,\r\n        passwordToggle: state.passwordToggle,\r\n        selectedState: state.selectedState,\r\n      };\r\n\r\n    case \"NULLIFER\":\r\n      return {\r\n        ...state,\r\n        selectedState: null,\r\n      };\r\n\r\n    case \"CHECK_PASSWORD\":\r\n      let newPass = state.password;\r\n      let newPasswordToggle = state.passwordToggle;\r\n      //If password is correct set it to true and toggle passwordToggle to run useEffect Input.jsx line 98\r\n      if (action.payload === \"stillwinter\") {\r\n        newPass = true;\r\n        newPasswordToggle = !newPasswordToggle;\r\n      } else if (action.payload === \"xD\") {\r\n        //The unique strategy execution.. Notice it doesnt have passwordToggle change so thats why useEffect doesnt run.\r\n        newPass = false;\r\n      } else {\r\n        //If password is wrong this toggles the passwordToggle and runs the use effect for error presentation.\r\n        newPasswordToggle = !newPasswordToggle;\r\n      }\r\n      return {\r\n        safeMode: state.safeMode,\r\n        loading: state.loading,\r\n        password: newPass,\r\n        passwordToggle: newPasswordToggle,\r\n        selectedState: state.selectedState,\r\n      };\r\n\r\n    case \"SET_SELECTED_STATE\":\r\n      let newSelectedState = action.payload;\r\n      return { ...state, selectedState: newSelectedState };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","function animeReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD_ANIME\":\r\n      let stateCopy = [\r\n        ...state,\r\n        {\r\n          name: action.anime.name,\r\n          genre: action.anime.genre,\r\n          url: action.anime.url,\r\n          id: action.anime.aid,\r\n          rating: action.anime.rating,\r\n          description: action.anime.description,\r\n          episodes: action.anime.episodes,\r\n          date: action.anime.date,\r\n          banner: action.anime.banner,\r\n          // id: Date.now(),\r\n        },\r\n      ];\r\n      return stateCopy;\r\n\r\n    case \"CLEAR\":\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animeReducer;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport animeReducer from \"../customHooks/animeReducer\";\r\nimport authReducer from \"../customHooks/authReducer\";\r\nimport currentAnimeReducer from \"../customHooks/currentAnimeReducer\";\r\n\r\nexport const AnimeContext = createContext();\r\n\r\nfunction AnimeContextProvider(props) {\r\n  const [animes, dispatch] = useReducer(animeReducer, []);\r\n  const [currentAnimes, currentAnimeDispatch] = useReducer(\r\n    currentAnimeReducer,\r\n    []\r\n  );\r\n  const [auth, authenticator] = useReducer(authReducer, {\r\n    safeMode: true,\r\n    loading: false,\r\n    password: false,\r\n    passwordToggle: false,\r\n    selectedState: null,\r\n  });\r\n  return (\r\n    <AnimeContext.Provider\r\n      value={{\r\n        animes,\r\n        dispatch,\r\n        auth,\r\n        authenticator,\r\n        currentAnimes,\r\n        currentAnimeDispatch,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AnimeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AnimeContextProvider;\r\n","import { useContext, useRef } from \"react\";\r\nimport \"../card.css\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\n\r\nfunction Card(props) {\r\n  const { dispatch } = useContext(AnimeContext);\r\n  const slider = useRef(null);\r\n  // const [description, setDescription] = useState(props.description);\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  let mouseDown = false;\r\n  let startX, scrollLeft;\r\n\r\n  let startDragging = function (e) {\r\n    mouseDown = true;\r\n    startX = e.pageX - slider.current.offsetLeft;\r\n    scrollLeft = slider.current.scrollLeft;\r\n  };\r\n  const stopDragging = () => {\r\n    mouseDown = false;\r\n  };\r\n\r\n  function handleDelete() {\r\n    dispatch({ type: \"REMOVE_ANIME\", id: props.id });\r\n  }\r\n\r\n  function mouseMoveEvent(e) {\r\n    e.preventDefault();\r\n\r\n    if (!mouseDown) {\r\n      return;\r\n    }\r\n    const x = e.pageX - slider.current.offsetLeft;\r\n    const scroll = x - startX;\r\n    slider.current.scrollLeft = scrollLeft - scroll;\r\n  }\r\n  // let description = props.description;\r\n  // let newDescription = description.replace(/\\<[^>]+?>/, \"\");\r\n  // console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"card_outer flex items-end z-10\"\r\n        style={{\r\n          background: `linear-gradient(0deg, rgba(0, 0, 0, 0.08), rgba(0, 0, 0, 0.08)),\r\n    url(${props.url}) no-repeat center center/cover`,\r\n        }}\r\n      >\r\n        <div className=\"card_content_cover\"></div>\r\n        <div className=\"card_content my-2\">\r\n          <h1 className=\"pr-2 font-bold text-xl\">{props.name}</h1>\r\n          <div className=\"card_details\">\r\n            {props.episodes ? (\r\n              <div className=\"episodes\">EP : {props.episodes} </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {props.date ? (\r\n              <div className=\"year\">\r\n                {months[props.date.month - 1]} {props.date.year}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"card_rating\">\r\n              {props.rating ? (\r\n                <>\r\n                  {props.rating / 10} <i className=\"fas fa-star\"></i>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"genre mb-2\"\r\n            ref={slider}\r\n            onMouseDown={startDragging}\r\n            onMouseUp={stopDragging}\r\n            onMouseLeave={stopDragging}\r\n            onMouseMove={mouseMoveEvent}\r\n          >\r\n            {props.genre.map((item, index) => {\r\n              return (\r\n                <p\r\n                  className=\"genre_item mr-2 rounded-full py-1 my-1 px-2 bg-gray-600 text-sm bg-opacity-80\"\r\n                  key={index}\r\n                >\r\n                  {item}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"flex\">\r\n            <button\r\n              id=\"delete\"\r\n              className=\"flex justify-center items-center p-2 w-1/2 mx-2 bg-red-600 rounded-md text-white active:text-red-600 active:bg-gray-200 hover:text-red-600 hover:bg-gray-200\"\r\n              onClick={handleDelete}\r\n            >\r\n              <i className=\"far fa-trash-alt mr-2\"></i>DELETE\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                props.showModalFunction(props.id);\r\n              }}\r\n              class=\"flex justify-center items-center p-2 w-1/2 mx-2 bg-blue-600 rounded-md text-white active:text-red-600 active:bg-gray-200 hover:text-red-600 hover:bg-gray-200\"\r\n            >\r\n              MORE INFO\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\n\r\nfunction Modal(props) {\r\n  let newDescription = props.info.description.replace(/\\([^\\)]+?\\)/g, \"\");\r\n  const { auth } = useContext(AnimeContext);\r\n  const [flipOut, setFlipOut] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (auth.selectedState) {\r\n      document.body.style.overflow = \"hidden\";\r\n      document.addEventListener(\"keydown\", (e) => {\r\n        if (e.key === \"Escape\") {\r\n          Loading().then(() => {\r\n            props.onClose();\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [auth.selectedState]);\r\n\r\n  const Loading = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 1000);\r\n    });\r\n  };\r\n\r\n  const Loading2 = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 500);\r\n    });\r\n  };\r\n\r\n  // console.log(newDescription);\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"myModal\"\r\n        className=\"modal py-10 fixed flex justify-center align-middle left-0 bottom-0 right-0 top-0 w-full h-full\"\r\n      >\r\n        <div\r\n          className={`modal-content ${\r\n            flipOut ? \"flipOut\" : \"\"\r\n          } text-white mb-2 flex flex-col rounded-lg relative text-sm w-5/6 sm:w-5/6 xl:w-1/2 lg:w-1/2 md:w-1/2 max-h-full p-4 overflow-y-auto bg-gray-900 sm:text-base xl:text-base lg:text-base md:text-base`}\r\n        >\r\n          <h1\r\n            style={{\r\n              background: `linear-gradient(90deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.1)),\r\n    url(${props.info.banner}) no-repeat center center/cover`,\r\n            }}\r\n            className=\"text-2xl py-7 px-3 text-white font-bold mb-2 xl:text-3xl lg:text-2xl md:text-2xl sm:2xl\"\r\n          >\r\n            {props.info.name}\r\n          </h1>\r\n\r\n          <div\r\n            className=\"pb-14\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: newDescription,\r\n            }}\r\n          ></div>\r\n          <button\r\n            className=\"sticky bottom-0 ml-auto bg-red-500 hover:bg-yellow-300 hover:text-black text-white font-bold py-2 px-4 rounded\"\r\n            onClick={() => {\r\n              setFlipOut(true);\r\n              Loading2().then(() => {\r\n                props.onClose();\r\n              });\r\n            }}\r\n          >\r\n            CLOSE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import { useContext, useRef, useState } from \"react\";\r\nimport \"../card.css\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\n\r\nfunction CurrentCalendarCard(props) {\r\n  const { dispatch } = useContext(AnimeContext);\r\n  const [addWatchlist, setAddWatchlist] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const Loading = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 1000);\r\n    });\r\n  };\r\n\r\n  const slider = useRef(null);\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  let mouseDown = false;\r\n  let startX, scrollLeft;\r\n\r\n  let startDragging = function (e) {\r\n    mouseDown = true;\r\n    startX = e.pageX - slider.current.offsetLeft;\r\n    scrollLeft = slider.current.scrollLeft;\r\n  };\r\n  const stopDragging = (event) => {\r\n    mouseDown = false;\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({ type: \"LOAD_ANIMES\" });\r\n  // }, []);\r\n\r\n  function mouseMoveEvent(e) {\r\n    e.preventDefault();\r\n\r\n    if (!mouseDown) {\r\n      return;\r\n    }\r\n    const x = e.pageX - slider.current.offsetLeft;\r\n    const scroll = x - startX;\r\n    slider.current.scrollLeft = scrollLeft - scroll;\r\n  }\r\n\r\n  function handleAdd() {\r\n    dispatch({\r\n      type: \"ADD_ANIME\",\r\n      anime: {\r\n        name: props.name,\r\n        genre: props.genre,\r\n        url: props.url,\r\n        // aid: props.id,\r\n        rating: props.rating,\r\n        description: props.description,\r\n        episodes: props.episodes,\r\n        date: props.date,\r\n        banner: props.banner,\r\n        id: Date.now(),\r\n      },\r\n    });\r\n  }\r\n\r\n  function successFunction() {\r\n    setSuccess(true);\r\n    Loading().then(() => {\r\n      setSuccess(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"card_outer flex items-end z-10\"\r\n        style={{\r\n          background: `linear-gradient(0deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1)),\r\n    url(${props.url}) no-repeat center center/cover`,\r\n        }}\r\n      >\r\n        <div className=\"card_content_cover\"></div>\r\n        <div className=\"card_content my-2\">\r\n          <h1 className=\"pr-2 font-bold text-xl\">{props.name}</h1>\r\n          <div className=\"card_details\">\r\n            {props.episodes ? (\r\n              <div className=\"episodes\">EP : {props.episodes} </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {props.date ? (\r\n              <div className=\"year\">\r\n                {months[props.date.month - 1]} {props.date.year}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"card_rating\">\r\n              {props.rating ? (\r\n                <>\r\n                  {\" \"}\r\n                  {props.rating / 10} <i className=\"fas fa-star\"></i>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"genre mb-2\"\r\n            ref={slider}\r\n            onMouseDown={startDragging}\r\n            onMouseUp={stopDragging}\r\n            onMouseLeave={stopDragging}\r\n            onMouseMove={mouseMoveEvent}\r\n          >\r\n            {props.genre.map((item, index) => {\r\n              return (\r\n                <p\r\n                  className=\"genre_item mr-2 rounded-full py-1 my-1 px-2 bg-gray-600 text-sm bg-opacity-80\"\r\n                  key={index}\r\n                >\r\n                  {item}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <button\r\n            id=\"add\"\r\n            className={\r\n              (addWatchlist\r\n                ? \"bg-yellow-300 text-gray-900 \"\r\n                : success\r\n                ? \"bg-green-600 text-white \"\r\n                : \"bg-blue-600 text-white \") +\r\n              \"flex justify-center  items-center p-2 w-full mx-auto rounded-md text-white active:text-gray-900 active:bg-gray-200\"\r\n            }\r\n            onClick={() => {\r\n              handleAdd();\r\n              setAddWatchlist(true);\r\n              Loading().then(() => {\r\n                setAddWatchlist(false);\r\n                successFunction();\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"far fa-plus-square mr-2\"></i>\r\n            {addWatchlist ? \"LOADING\" : success ? \"SUCCESS\" : \"WATCHLIST\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrentCalendarCard;\r\n","import Card from \"./Card\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\nimport Modal from \"./Modal\";\r\nimport { useContext } from \"react\";\r\nimport CurrentCalendarCard from \"./CurrentCalendarCard\";\r\n\r\nfunction Cards(props) {\r\n  let animesMap;\r\n  const { animes, authenticator, auth } = useContext(AnimeContext);\r\n  let { currentAnimes } = useContext(AnimeContext);\r\n  props.type === \"Current\" ? (animesMap = currentAnimes) : (animesMap = animes);\r\n  function showModal(id) {\r\n    let newSelectedState = animes.find((x) => x.id === id);\r\n    authenticator({ type: \"SET_SELECTED_STATE\", payload: newSelectedState });\r\n  }\r\n\r\n  function hideModal() {\r\n    document.body.style.overflow = \"auto\";\r\n    authenticator({ type: \"NULLIFER\" });\r\n  }\r\n\r\n  return animesMap.length ? (\r\n    props.type === \"Current\" ? (\r\n      <div className=\"cards grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-3 mt-6 justify-items-center \">\r\n        {animesMap.map((anime) => {\r\n          return (\r\n            <CurrentCalendarCard\r\n              name={anime.name}\r\n              key={anime.id}\r\n              // anime_id={anime.aid}\r\n              genre={anime.genre}\r\n              rating={anime.rating}\r\n              episodes={anime.episodes}\r\n              url={anime.url}\r\n              description={anime.description}\r\n              date={anime.date}\r\n              banner={anime.banner}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    ) : (\r\n      <div className=\"cards grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-4 my-10 justify-items-center \">\r\n        {animesMap.map((anime) => {\r\n          return (\r\n            <Card\r\n              // key={index}\r\n              name={anime.name}\r\n              key={anime.aid}\r\n              genre={anime.genre}\r\n              rating={anime.rating}\r\n              episodes={anime.episodes}\r\n              description={anime.description}\r\n              url={anime.url}\r\n              date={anime.date}\r\n              id={anime.id}\r\n              showModalFunction={showModal}\r\n            />\r\n          );\r\n        })}\r\n        {auth.selectedState && (\r\n          <Modal info={auth.selectedState} onClose={hideModal} />\r\n        )}\r\n      </div>\r\n    )\r\n  ) : (\r\n    <h1 className=\"text-4xl text-white mt-32 text-center\">NO MORE ANIME....</h1>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\nimport Cards from \"./Cards\";\r\n\r\nfunction CurrentCalendar() {\r\n  const { currentAnimes, currentAnimeDispatch, auth } =\r\n    useContext(AnimeContext);\r\n\r\n  let date = new Date();\r\n\r\n  let seasonObject = {\r\n    WINTER: [\"January\", \"February\", \"March\"],\r\n    SPRING: [\"April\", \"May\", \"June\"],\r\n    SUMMER: [\"July\", \"August\", \"September\"],\r\n    FALL: [\"October\", \"November\", \"December\"],\r\n  };\r\n\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  function CurrentDataFetcher() {\r\n    let seasonKey;\r\n    let month = months[date.getMonth()];\r\n    let currentYear = date.getFullYear();\r\n    getSeason(month);\r\n\r\n    function getSeason(month) {\r\n      Object.keys(seasonObject).find((key) => {\r\n        if (seasonObject[key].includes(`${month}`)) {\r\n          seasonKey = key;\r\n        }\r\n      });\r\n    }\r\n\r\n    const query = `query ($page: Int = 1) {\r\n        Page(page: $page, perPage: 50) {\r\n          pageInfo {\r\n            total\r\n            perPage\r\n            currentPage\r\n            lastPage\r\n            hasNextPage\r\n          }\r\n          media(type: ANIME, status: RELEASING, season: ${seasonKey}, seasonYear: ${currentYear}, sort:POPULARITY_DESC) {\r\n            id\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n            coverImage {\r\n              extraLarge\r\n              large\r\n            }\r\n            startDate {\r\n              year\r\n              month\r\n              day\r\n            }\r\n            status\r\n            description\r\n            episodes\r\n            genres\r\n            bannerImage\r\n            isAdult\r\n            averageScore\r\n            nextAiringEpisode {\r\n              airingAt\r\n              timeUntilAiring\r\n              episode\r\n            }\r\n          }\r\n        }\r\n      }`;\r\n    fetch(\"https://graphql.anilist.co\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query,\r\n        variables: {\r\n          page: 1,\r\n        },\r\n      }),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        console.log(\"data returned:\", data);\r\n        let apiData = data.data.Page.media;\r\n        apiData.map((item) => {\r\n          if (auth.safeMode && item.isAdult) {\r\n            return;\r\n          } else {\r\n            currentAnimeDispatch({\r\n              type: \"ADD_ANIME\",\r\n              anime: {\r\n                name: item.title.english\r\n                  ? item.title.english\r\n                  : item.title.romaji,\r\n                url: item.coverImage.extraLarge,\r\n                genre: item.genres,\r\n                description: item.description,\r\n                rating: item.averageScore,\r\n                episodes: item.episodes,\r\n                date: item.startDate,\r\n                banner: item.bannerImage,\r\n              },\r\n            });\r\n          }\r\n          return null;\r\n        });\r\n        //   console.log(apiData);\r\n        //   data.data.Page.media.map((item, index) => {\r\n        //     currentAnimeDispatch({\r\n        //       type: \"ADD_ANIME\",\r\n        //       anime: {\r\n        //         name: item.title.english ? item.title.english : item.title.romaji,\r\n        //         url: item.coverImage.extraLarge,\r\n        //         genre: item.genres,\r\n        //         aid: item.id,\r\n        //         rating: item.averageScore,\r\n        //         episodes: item.episodes,\r\n        //         date: item.startDate,\r\n        //       },\r\n        //     });\r\n        //   });\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    CurrentDataFetcher();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return currentAnimes.length > 1 ? (\r\n    <Cards type=\"Current\" />\r\n  ) : (\r\n    <div className=\"text-4xl text-white mt-32 text-center\"> Loading.... </div>\r\n  );\r\n}\r\n\r\nexport default CurrentCalendar;\r\n","import CurrentCalendar from \"./CurrentCalendar\";\r\n\r\nfunction CurrentCalendarRenderer() {\r\n  return <CurrentCalendar />;\r\n}\r\n\r\nexport default CurrentCalendarRenderer;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <header className=\"text-gray-400 bg-gray-900 body-font\">\r\n      <div className=\"w-full flex flex-wrap p-5 flex-col md:flex-row items-center\">\r\n        <div className=\"flex title-font font-medium items-center  text-white mb-4 md:mb-0\">\r\n          <span className=\"ml-3 cursor-default text-2xl\">\r\n            {\"STILLWATER </>\"}\r\n          </span>\r\n        </div>\r\n        <nav className=\"md:ml-auto flex flex-wrap justify-center items-center text-lg \">\r\n          <Link to=\"/\" className=\" px-4 py-2 hover:text-white\">\r\n            WATCHLIST\r\n          </Link>\r\n          <Link to=\"/current\" className=\"px-4 py-2 hover:text-white\">\r\n            ONGOING ANIMES\r\n          </Link>\r\n          <Link to=\"/\" className=\"px-4 py-2 hover:text-white\">\r\n            KHOPCHA\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\n\r\nfunction Input() {\r\n  const [name, setName] = useState(\"\");\r\n  const [animeName, setAnimeName] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  const { dispatch, auth, authenticator, currentAnimeDispatch } =\r\n    useContext(AnimeContext);\r\n  //FETCHING DATA FROM API AND SENDING TO REDUCER TO ADD IT TO ANIMES STATE OF REDUCER\r\n  function DataFetcher(name) {\r\n    const query = `query($name: String, $status: MediaStatus) {         \r\n      Media(search: $name, type: ANIME, status: $status,genre_not_in:\"MUSIC\") {\r\n        id,\r\n        title {\r\n          english,\r\n          romaji,\r\n        },\r\n        status,\r\n        description,\r\n        startDate {\r\n          year,\r\n          month,\r\n          day\r\n        },\r\n        averageScore,\r\n        type,\r\n        bannerImage,\r\n        genres,\r\n        isAdult,\r\n        episodes,\r\n        nextAiringEpisode {\r\n          id,\r\n          airingAt,\r\n          timeUntilAiring\r\n        },\r\n        bannerImage,\r\n        coverImage {\r\n          large,\r\n          extraLarge\r\n        }\r\n      }\r\n    \r\n    }`;\r\n\r\n    fetch(\"https://graphql.anilist.co\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query,\r\n        variables: { name: name },\r\n      }),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        if (data.errors || (auth.safeMode ? data.data.Media.isAdult : 0)) {\r\n          alert(\"ANIME NAME NOT FOUND... BE MORE SPECIFIC\");\r\n        } else {\r\n          dispatch({\r\n            type: \"ADD_ANIME\",\r\n            anime: {\r\n              name: data.data.Media.title.english\r\n                ? data.data.Media.title.english\r\n                : data.data.Media.title.romaji,\r\n              url: data.data.Media.coverImage.extraLarge,\r\n              genre: data.data.Media.genres,\r\n              // aid: data.data.Media.id,\r\n              rating: data.data.Media.averageScore,\r\n              episodes: data.data.Media.episodes,\r\n              date: data.data.Media.startDate,\r\n              description: data.data.Media.description,\r\n              banner: data.data.Media.bannerImage,\r\n              id: Date.now(),\r\n            },\r\n          });\r\n        }\r\n      });\r\n  }\r\n  //Taking input from form and adding the requested name to animeName state and clearing the form input\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setAnimeName(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentAnimeDispatch({ type: \"CLEAR\" });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //LOADING ANIMES FROM LOCAL STORAGE AND IF WE GOT NEW ANIME REQ FROM INPUT i.e. animeName state changed above SEND THAT ANIME REQ TO API\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_ANIMES\" });\r\n    if (animeName) {\r\n      //If to prevent sending an empty req to API as use effect runs when DOM loads too and animeName is \"\" i.e false at beginning\r\n      DataFetcher(animeName);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [animeName]); // <---- NOTICE THE DEPENDENCY ARRAY OF animeName which runs it everytime user enters a new anime req.\r\n\r\n  useEffect(() => {\r\n    if (firstUpdate.current) {\r\n      console.log('Pssst... Password is \"stillwinter\"');\r\n      //If to prevent the useeffect to run the main code on firstupdate i.e when DOM LOADS\r\n      firstUpdate.current = false;\r\n      return;\r\n    } else {\r\n      //Main code to add loading and change the safe mode button\r\n      if (auth.password) {\r\n        Loading().then(() => {\r\n          authenticator({ type: \"TOGGLE_SAFE_MODE\" });\r\n          authenticator({ type: \"TOGGLE_LOADING\" });\r\n        });\r\n      } else {\r\n        Loading().then(() => {\r\n          alert(\"WRONG PASSWORD!\");\r\n          authenticator({ type: \"TOGGLE_LOADING\" });\r\n        });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [auth.passwordToggle]);\r\n\r\n  //Loading promise for loading animation of 1s\r\n  const Loading = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 1000);\r\n    });\r\n  };\r\n\r\n  const LoadingAuth = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 3000);\r\n    });\r\n  };\r\n  // flex items-center justify-center flex-col mx-8 mt-8 xl:flex-row lg:flex-row md:flex-col sm:flex-col\r\n  return (\r\n    <>\r\n      <form\r\n        id=\"input_form\"\r\n        className=\"mx-8 mt-4 flex flex-col justify-center items-center space-x-4 xl:flex-row lg:flex-row md:flex-row sm:flex-col \"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n          id=\"name\"\r\n          className=\"w-full sm:w-full xl:w-3/4 lg:w-3/4 md:w-3/4 mt-4 bg-gray-600 rounded border border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-400 text-base outline-none text-white py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n          type=\"text\"\r\n          name=\"hidden\"\r\n          value={name}\r\n          placeholder=\"Anime Name\"\r\n          autoComplete=\"false\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <div className=\"buttons flex justify-center items-center space-x-4 mt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 rounded hover:bg-white hover:text-blue-700 bg-blue-700 text-white\"\r\n          >\r\n            INSERT\r\n          </button>\r\n          <button\r\n            className={\r\n              \"px-4 py-2 rounded text-white whitespace-nowrap \" +\r\n              (auth.loading\r\n                ? \"bg-yellow-300 text-gray-900\"\r\n                : auth.safeMode\r\n                ? \"bg-green-700 \"\r\n                : \"bg-red-700 \")\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              //This IF prevents asking for password when coming back from SAFE MODE OFF to ON\r\n              if (auth.password) {\r\n                authenticator({ type: \"TOGGLE_LOADING\" });\r\n                authenticator({ type: \"CHECK_PASSWORD\", payload: \"xD\" }); //Unique Strategy To prevent loading of useEffect and set password to false again. Check Dependency of UseEffect line 118 authReducer for more info.\r\n                Loading().then(() => {\r\n                  authenticator({ type: \"TOGGLE_SAFE_MODE\" });\r\n                  authenticator({ type: \"TOGGLE_LOADING\" });\r\n                });\r\n              } else {\r\n                //If Safe Mode Is ON Ask Password To turn it off\r\n                authenticator({ type: \"TOGGLE_LOADING\" });\r\n                LoadingAuth().then(() => {\r\n                  let password = prompt(\"ENTER PASSWORD\");\r\n                  if (password === null) {\r\n                    authenticator({ type: \"TOGGLE_LOADING\" });\r\n                    return;\r\n                  } else if (password === \"\") {\r\n                    authenticator({ type: \"TOGGLE_LOADING\" });\r\n                    return;\r\n                  } else {\r\n                    authenticator({\r\n                      type: \"CHECK_PASSWORD\",\r\n                      payload: password,\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            {auth.loading //Button text rendering based on states\r\n              ? \"LOADING\"\r\n              : auth.safeMode\r\n              ? \"SAFE MODE:ON\"\r\n              : \"SAFE MODE:OFF\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import Input from \"./Input\";\r\nimport Cards from \"./Cards\";\r\n\r\nfunction Watchlist() {\r\n  return (\r\n    <>\r\n      <div className=\"form\">\r\n        <Input />\r\n      </div>\r\n      <Cards type=\"watchlist\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Watchlist;\r\n","import { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport CurrentCalendarRenderer from \"./components/CurrentCalendarRenderer\";\nimport Nav from \"./components/Nav\";\nimport Watchlist from \"./components/Watchlist\";\nimport AnimeContextProvider from \"./contexts/AnimeContext\";\n\nfunction App() {\n  return (\n    <AnimeContextProvider>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Watchlist} />\n        <Route exact path=\"/current\" component={CurrentCalendarRenderer} />\n      </Switch>\n    </AnimeContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}