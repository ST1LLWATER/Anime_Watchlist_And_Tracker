{"version":3,"sources":["customHooks/animeReducer.js","customHooks/authReducer.js","contexts/AnimeContext.js","components/Input.jsx","components/Card.jsx","components/Cards.jsx","App.js","index.js"],"names":["animeReducer","state","action","type","items","localStorage","getItem","JSON","parse","stateCopy","name","anime","genre","url","aid","rating","episodes","date","id","Date","now","setItem","stringify","newStateCopy","filter","object","authReducer","newSafeMode","safeMode","loading","password","passwordToggle","newLoading","newPass","newPasswordToggle","payload","AnimeContext","createContext","AnimeContextProvider","props","useReducer","animes","dispatch","auth","authenticator","Provider","value","children","Input","useState","setName","animeName","setAnimeName","setData","firstUpdate","useRef","useContext","useEffect","fetch","method","headers","Accept","body","query","variables","then","r","json","data","console","log","errors","Media","isAdult","alert","title","english","romaji","coverImage","extraLarge","genres","averageScore","startDate","DataFetcher","current","Loading","Promise","resolve","setTimeout","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","target","required","onClick","prompt","Card","startX","scrollLeft","slider","mouseDown","stopDragging","event","style","background","month","year","ref","onMouseDown","pageX","offsetLeft","onMouseUp","onMouseLeave","onMouseMove","scroll","map","item","index","class","Cards","length","anime_id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06e7fcd2.chunk.js","sourcesContent":["function animeReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOAD_ANIMES\":\r\n      let items = localStorage.getItem(\"list\");\r\n      if (items) {\r\n        const parsedItems = JSON.parse(items);\r\n        return parsedItems;\r\n      } else {\r\n        return [...state];\r\n      }\r\n\r\n    case \"ADD_ANIME\":\r\n      let stateCopy = [\r\n        {\r\n          name: action.anime.name,\r\n          genre: action.anime.genre,\r\n          url: action.anime.url,\r\n          aid: action.anime.aid,\r\n          rating: action.anime.rating,\r\n          episodes: action.anime.episodes,\r\n          date: action.anime.date,\r\n          id: Date.now(),\r\n        },\r\n        ...state,\r\n      ];\r\n      localStorage.setItem(\"list\", JSON.stringify(stateCopy));\r\n      return stateCopy;\r\n\r\n    case \"REMOVE_ANIME\":\r\n      let newStateCopy = state.filter((object) => object.id !== action.id);\r\n      localStorage.setItem(\"list\", JSON.stringify(newStateCopy));\r\n      return newStateCopy;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animeReducer;\r\n","function authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SAFE_MODE\":\r\n      let newSafeMode = state.safeMode;\r\n      newSafeMode = !newSafeMode;\r\n      // console.log(newSafeMode);\r\n      return {\r\n        safeMode: newSafeMode,\r\n        loading: state.loading,\r\n        password: state.password,\r\n        passwordToggle: state.passwordToggle,\r\n      };\r\n\r\n    case \"TOGGLE_LOADING\":\r\n      let newLoading = state.loading;\r\n      newLoading = !newLoading;\r\n      return {\r\n        safeMode: state.safeMode,\r\n        loading: newLoading,\r\n        password: state.password,\r\n        passwordToggle: state.passwordToggle,\r\n      };\r\n\r\n    case \"CHECK_PASSWORD\":\r\n      let newPass = state.password;\r\n      let newPasswordToggle = state.passwordToggle;\r\n      //If password is correct set it to true and toggle passwordToggle to run useEffect Input.jsx line 98\r\n      if (action.payload === \"stillwinter\") {\r\n        newPass = true;\r\n        newPasswordToggle = !newPasswordToggle;\r\n      } else if (action.payload === \"xD\") {\r\n        //The unique strategy execution.. Notice it doesnt have passwordToggle change so thats why useEffect doesnt run.\r\n        newPass = false;\r\n      } else {\r\n        //If password is wrong this toggles the passwordToggle and runs the use effect for error presentation.\r\n        newPasswordToggle = !newPasswordToggle;\r\n      }\r\n      return {\r\n        safeMode: state.safeMode,\r\n        loading: state.loading,\r\n        password: newPass,\r\n        passwordToggle: newPasswordToggle,\r\n      };\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import React, { createContext, useReducer, useState } from \"react\";\r\nimport animeReducer from \"../customHooks/animeReducer\";\r\nimport authReducer from \"../customHooks/authReducer\";\r\n\r\nexport const AnimeContext = createContext();\r\n\r\nfunction AnimeContextProvider(props) {\r\n  const [animes, dispatch] = useReducer(animeReducer, []);\r\n  const [auth, authenticator] = useReducer(authReducer, {\r\n    safeMode: true,\r\n    loading: false,\r\n    password: false,\r\n    passwordToggle: false,\r\n  });\r\n  return (\r\n    <AnimeContext.Provider value={{ animes, dispatch, auth, authenticator }}>\r\n      {props.children}\r\n    </AnimeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AnimeContextProvider;\r\n","import { computeHeadingLevel } from \"@testing-library/react\";\r\nimport { useState, useReducer, useRef, useEffect, useContext } from \"react\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\n\r\nfunction Input() {\r\n  const [name, setName] = useState(\"\");\r\n  const [animeName, setAnimeName] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  const { dispatch, auth, authenticator } = useContext(AnimeContext);\r\n\r\n  //FETCHING DATA FROM API AND SENDING TO REDUCER TO ADD IT TO ANIMES STATE OF REDUCER\r\n  function DataFetcher(name) {\r\n    const query = `query($name: String, $status: MediaStatus) {         \r\n            Media(search: $name, type: ANIME, status: $status) {\r\n              id,\r\n              title {\r\n                english,\r\n                romaji,\r\n              },\r\n              status,\r\n              startDate {\r\n                year,\r\n                month,\r\n                day\r\n              },\r\n              averageScore,\r\n              type,\r\n              genres,\r\n              isAdult,\r\n              episodes,\r\n              nextAiringEpisode {\r\n                id,\r\n                airingAt,\r\n                timeUntilAiring\r\n              },\r\n              bannerImage,\r\n              coverImage {\r\n                large,\r\n                extraLarge\r\n              }\r\n            }\r\n          \r\n          }`;\r\n\r\n    fetch(\"https://graphql.anilist.co\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query,\r\n        variables: { name: name },\r\n      }),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        console.log(\"data returned:\", data);\r\n        if (data.errors || (auth.safeMode ? data.data.Media.isAdult : 0)) {\r\n          alert(\"ANIME NAME NOT FOUND... BE MORE SPECIFIC\");\r\n        } else {\r\n          setData(data);\r\n          dispatch({\r\n            type: \"ADD_ANIME\",\r\n            anime: {\r\n              name: data.data.Media.title.english\r\n                ? data.data.Media.title.english\r\n                : data.data.Media.title.romaji,\r\n              url: data.data.Media.coverImage.extraLarge,\r\n              genre: data.data.Media.genres,\r\n              aid: data.data.Media.id,\r\n              rating: data.data.Media.averageScore,\r\n              episodes: data.data.Media.episodes,\r\n              date: data.data.Media.startDate,\r\n            },\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  //Taking input from form and adding the requested name to animeName state and clearing the form input\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setAnimeName(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  //LOADING ANIMES FROM LOCAL STORAGE AND IF WE GOT NEW ANIME REQ FROM INPUT i.e. animeName state changed above SEND THAT ANIME REQ TO API\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_ANIMES\" });\r\n    if (animeName) {\r\n      //If to prevent sending an empty req to API as use effect runs when DOM loads too and animeName is \"\" i.e false at beginning\r\n      DataFetcher(animeName);\r\n    }\r\n  }, [animeName]); // <---- NOTICE THE DEPENDENCY ARRAY OF animeName which runs it everytime user enters a new anime req.\r\n\r\n  useEffect(() => {\r\n    if (firstUpdate.current) {\r\n      console.log('Pssst... Password is \"stillwinter\"');\r\n      //If to prevent the useeffect to run the main code on firstupdate i.e when DOM LOADS\r\n      firstUpdate.current = false;\r\n      return;\r\n    } else {\r\n      //Main code to add loading and change the safe mode button\r\n      authenticator({ type: \"TOGGLE_LOADING\" });\r\n      if (auth.password) {\r\n        Loading().then(() => {\r\n          authenticator({ type: \"TOGGLE_SAFE_MODE\" });\r\n          authenticator({ type: \"TOGGLE_LOADING\" });\r\n        });\r\n      } else {\r\n        Loading().then(() => {\r\n          alert(\"WRONG PASSWORD!\");\r\n          authenticator({ type: \"TOGGLE_LOADING\" });\r\n        });\r\n      }\r\n    }\r\n  }, [auth.passwordToggle]);\r\n\r\n  //Loading promise for loading animation of 1s\r\n  const Loading = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, 1000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        id=\"input_form\"\r\n        className=\"flex items-center justify-center flex-col mx-8 mt-8 xl:flex-row lg:flex-row md:flex-col sm:flex-col\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n          id=\"name\"\r\n          className=\"p-2 mr-4 w-full bg-gray-600 text-gray-100 focus:ring rounded ring-blue-700 xl:w-1/2 lg:w-1/2 md:w-3/4 sm:w-full\"\r\n          type=\"text\"\r\n          name=\"hidden\"\r\n          value={name}\r\n          placeholder=\"Anime Name\"\r\n          autoComplete=\"false\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <div className=\"buttons flex justify-center items-center my-4\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 mr-4 rounded hover:bg-white hover:text-blue-700 bg-blue-700 text-white\"\r\n          >\r\n            INSERT\r\n          </button>\r\n          <button\r\n            className={\r\n              \"px-4 py-2 mr-4 rounded hover:bg-white hover:text-blue-700 text-white \" +\r\n              (auth.loading\r\n                ? \"bg-yellow-300 text-gray-900\"\r\n                : auth.safeMode\r\n                ? \"bg-green-700 \"\r\n                : \"bg-red-700 \")\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              //This IF prevents asking for password when coming back from SAFE MODE OFF to ON\r\n              if (auth.password) {\r\n                authenticator({ type: \"TOGGLE_LOADING\" });\r\n                authenticator({ type: \"CHECK_PASSWORD\", payload: \"xD\" }); //Unique Strategy To prevent loading of useEffect and set password to false again. Check Dependency of UseEffect line 118 authReducer for more info.\r\n                Loading().then(() => {\r\n                  authenticator({ type: \"TOGGLE_SAFE_MODE\" });\r\n                  authenticator({ type: \"TOGGLE_LOADING\" });\r\n                });\r\n              } else {\r\n                //If Safe Mode Is ON Ask Password To turn it off\r\n                let password = prompt(\"ENTER PASSWORD\");\r\n                authenticator({ type: \"CHECK_PASSWORD\", payload: password });\r\n              }\r\n            }}\r\n          >\r\n            {auth.loading //Button text rendering based on states\r\n              ? \"LOADING\"\r\n              : auth.safeMode\r\n              ? \"SAFE MODE:ON\"\r\n              : \"SAFE MODE:OFF\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport \"../card.css\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\n\r\nfunction Card(props) {\r\n  const { dispatch } = useContext(AnimeContext);\r\n  const slider = useRef(null);\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  function handleDelete(e) {\r\n    dispatch({ type: \"REMOVE_ANIME\", id: props.id });\r\n  }\r\n\r\n  let mouseDown = false;\r\n  let startX, scrollLeft;\r\n\r\n  let startDragging = function (e) {\r\n    mouseDown = true;\r\n    startX = e.pageX - slider.current.offsetLeft;\r\n    scrollLeft = slider.current.scrollLeft;\r\n  };\r\n  const stopDragging = (event) => {\r\n    mouseDown = false;\r\n  };\r\n\r\n  function mouseMoveEvent(e) {\r\n    e.preventDefault();\r\n\r\n    if (!mouseDown) {\r\n      return;\r\n    }\r\n    const x = e.pageX - slider.current.offsetLeft;\r\n    const scroll = x - startX;\r\n    slider.current.scrollLeft = scrollLeft - scroll;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"card_outer flex items-end z-10\"\r\n        style={{\r\n          background: `linear-gradient(0deg, rgba(0, 0, 0, 0.08), rgba(0, 0, 0, 0.08)),\r\n    url(${props.url}) no-repeat center center/cover`,\r\n        }}\r\n      >\r\n        <div className=\"card_content_cover\"></div>\r\n        <div className=\"card_content my-2\">\r\n          <h1 className=\"pr-2 font-bold text-xl\">{props.name}</h1>\r\n          <div className=\"card_details\">\r\n            {props.episodes ? (\r\n              <div className=\"episodes\">EP : {props.episodes} </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {props.date ? (\r\n              <div className=\"year\">\r\n                {months[props.date.month - 1]} {props.date.year}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <p>\r\n              {props.rating ? (\r\n                <div className=\"card_rating\">\r\n                  {\" \"}\r\n                  {props.rating / 10} <i className=\"fas fa-star\"></i>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          </div>\r\n\r\n          <div\r\n            className=\"genre mb-2\"\r\n            ref={slider}\r\n            onMouseDown={startDragging}\r\n            onMouseUp={stopDragging}\r\n            onMouseLeave={stopDragging}\r\n            onMouseMove={mouseMoveEvent}\r\n          >\r\n            {props.genre.map((item, index) => {\r\n              {\r\n                return (\r\n                  <p\r\n                    className=\"genre_item mr-2 rounded-full py-1 my-1 px-2 bg-gray-600 text-sm bg-opacity-80\"\r\n                    key={index}\r\n                  >\r\n                    {item}\r\n                  </p>\r\n                );\r\n              }\r\n              {\r\n                /* return item + \" \"; */\r\n              }\r\n            })}\r\n          </div>\r\n\r\n          <button\r\n            id=\"delete\"\r\n            className=\"flex justify-center items-center p-2 w-full mx-auto bg-red-600 rounded-md text-white active:text-red-600 active:bg-gray-200 hover:text-red-600 hover:bg-gray-200\"\r\n            onClick={handleDelete}\r\n          >\r\n            <i class=\"far fa-trash-alt mr-2\"></i>DELETE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport { AnimeContext } from \"../contexts/AnimeContext\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Cards() {\r\n  const { animes } = useContext(AnimeContext);\r\n  return animes.length ? (\r\n    <div className=\"cards grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-4 my-10 justify-items-center \">\r\n      {animes.map((anime) => {\r\n        return (\r\n          <Card\r\n            name={anime.name}\r\n            id={anime.id}\r\n            key={anime.id}\r\n            anime_id={anime.aid}\r\n            genre={anime.genre}\r\n            rating={anime.rating}\r\n            episodes={anime.episodes}\r\n            url={anime.url}\r\n            date={anime.date}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  ) : (\r\n    <h1 className=\"empty text-white text-center text-xl font-bold\">\r\n      No More Animes On The List\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import \"./App.css\";\nimport Input from \"./components/Input\";\nimport Cards from \"./components/Cards\";\nimport AnimeContextProvider from \"./contexts/AnimeContext\";\n\nfunction App() {\n  return (\n    <AnimeContextProvider>\n      <div className=\"cover\">\n        <div className=\"form\">\n          <Input />\n        </div>\n        <Cards />\n      </div>\n    </AnimeContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}